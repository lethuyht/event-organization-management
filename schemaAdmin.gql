# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type IRole {
  createdAt: DateTime
  id: ID!
  name: String!
  updatedAt: DateTime
}

type IRoles {
  items: [IRole!]!
  meta: MetaPaginationInterface!
}

type LoginResponse {
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  refreshToken: String!
  token: String!
}

type MetaPaginationInterface {
  currentPage: Float!
  itemCount: Float!
  itemsPerPage: Float!
  totalItems: Float!
  totalPages: Float!
}

type Mutation {
  refreshToken(input: RefreshTokenDto!): RefreshResponse!
  signIn(input: SignInDto!): LoginResponse!
  signOut(input: SignOutDto!): ResponseMessageBase!
}

type Query {
  getRole(id: ID!): IRole!
  getRoles(queryParams: QueryFilter!): IRoles!
}

input QueryFilter {
  "\n- Paginate with limit and offset. Ex: limit:10, page:1\n"
  limit: Float = 10

  "\n- Order by fields and order reverse use prefix \"ASC or DESC\". Ex: orderBy: \"User.createdAt:DESC\"\n- Use NULLS_FIRST OR NULLS_LAST to determine where null value should be, Ex: orderBy: \"User.createdAt:DESC:NULLS_FIRST\"\n"
  orderBy: String

  "\n- Paginate with limit and offset. Ex: limit:10, page:1\n"
  page: Float! = 1
}

type RefreshResponse {
  accessToken: String!
}

input RefreshTokenDto {
  refreshToken: String!
}

type ResponseMessageBase {
  message: String
  success: Boolean
}

input SignInDto {
  email: String!
  password: String!
}

input SignOutDto {
  refreshToken: String!
}